    int longestSubarray(vector<int>& arr, int k) {
        // code here
        unordered_map<int, int> sumIndexMap;  // cumulative_sum -> first_index
        int maxLen = 0, currSum = 0;
    
        for (int i = 0; i < arr.size(); ++i) {
            currSum += arr[i];
    
            if (currSum == k) {
                maxLen = i + 1;
            }
    
            if (sumIndexMap.find(currSum - k) != sumIndexMap.end()) {
                maxLen = max(maxLen, i - sumIndexMap[currSum - k]);
            }
    
            if (sumIndexMap.find(currSum) == sumIndexMap.end()) {
                sumIndexMap[currSum] = i;
            }
        }
    
        return maxLen;
